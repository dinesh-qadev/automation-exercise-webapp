{"uid":"629f5db06eb5e202","name":"Login User with Correct Credentials","fullName":"testCases.test_002_login_user#test_002_login_user_with_correct_credentials","time":{"start":1748710085016,"stop":1748710085035,"duration":19},"description":"Verify registered user can login with valid email and password.","descriptionHtml":"<p>Verify registered user can login with valid email and password.</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=136.0.7103.114)\nStacktrace:\n\tGetHandleVerifier [0x00D9FC03+61635]\n\tGetHandleVerifier [0x00D9FC44+61700]\n\t(No symbol) [0x00BC05D3]\n\t(No symbol) [0x00B9FBC9]\n\t(No symbol) [0x00C33CBE]\n\t(No symbol) [0x00C4DF19]\n\t(No symbol) [0x00C2D096]\n\t(No symbol) [0x00BFC840]\n\t(No symbol) [0x00BFD6A4]\n\tGetHandleVerifier [0x01024523+2701795]\n\tGetHandleVerifier [0x0101FCA6+2683238]\n\tGetHandleVerifier [0x0103A9EE+2793134]\n\tGetHandleVerifier [0x00DB68C5+155013]\n\tGetHandleVerifier [0x00DBCFAD+181357]\n\tGetHandleVerifier [0x00DA7458+92440]\n\tGetHandleVerifier [0x00DA7600+92864]\n\tGetHandleVerifier [0x00D91FF0+5296]\n\tBaseThreadInitThunk [0x757BFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x779782AE+286]\n\tRtlGetAppContainerNamedObjectPath [0x7797827E+238]","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a317ca652764ff8c482c0d4da34de7b4\")>\n\n    @allure.feature(\"User Authentication\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.title(\"Login User with Correct Credentials\")\n    @allure.description(\"Verify registered user can login with valid email and password.\")\n    def test_002_login_user_with_correct_credentials(browser):\n        # Initialize page objects\n        home_page = HomePage(browser)\n        signup_login_page = SignupLoginPage(browser)\n        account_page = AccountPage(browser)\n    \n        # Step 3: Verify home page is displayed by checking if 'Home' link is active\n>       assert home_page.is_home_page_displayed(), \"Home page is not visible or 'Home' link is not active\"\n\ntestCases\\test_002_login_user.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\home_page.py:57: in is_home_page_displayed\n    return self.is_home_link_active()\npageObjects\\home_page.py:46: in is_home_link_active\n    home_link_element = self.driver.find_element(*self.HOME_LINK)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000028E28437BD0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x779782AE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7797827E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=136.0.7103.114)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00D9FC03+61635]\nE       \tGetHandleVerifier [0x00D9FC44+61700]\nE       \t(No symbol) [0x00BC05D3]\nE       \t(No symbol) [0x00B9FBC9]\nE       \t(No symbol) [0x00C33CBE]\nE       \t(No symbol) [0x00C4DF19]\nE       \t(No symbol) [0x00C2D096]\nE       \t(No symbol) [0x00BFC840]\nE       \t(No symbol) [0x00BFD6A4]\nE       \tGetHandleVerifier [0x01024523+2701795]\nE       \tGetHandleVerifier [0x0101FCA6+2683238]\nE       \tGetHandleVerifier [0x0103A9EE+2793134]\nE       \tGetHandleVerifier [0x00DB68C5+155013]\nE       \tGetHandleVerifier [0x00DBCFAD+181357]\nE       \tGetHandleVerifier [0x00DA7458+92440]\nE       \tGetHandleVerifier [0x00DA7600+92864]\nE       \tGetHandleVerifier [0x00D91FF0+5296]\nE       \tBaseThreadInitThunk [0x757BFCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x779782AE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7797827E+238]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchWindowException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"config","time":{"start":1748710028739,"stop":1748710028739,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser","time":{"start":1748710076466,"stop":1748710085015,"duration":8549},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"browser::0","time":{"start":1748710087341,"stop":1748710089502,"duration":2161},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"629f5db06eb5e202.json","parameterValues":[]}