{"uid":"b46c4a4d399a2fbf","name":"Submit Contact Us Form","fullName":"testCases.test_006_contact_us_form#test_006_contact_us_form","historyId":"d85eb3c24f41a3fd43349fedfc6e686d","time":{"start":1748625594393,"stop":1748625608624,"duration":14231},"description":"Verify user can submit contact form and success message is displayed.","descriptionHtml":"<p>Verify user can submit contact form and success message is displayed.</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0074FC03+61635]\n\tGetHandleVerifier [0x0074FC44+61700]\n\t(No symbol) [0x005705D3]\n\t(No symbol) [0x005B899E]\n\t(No symbol) [0x005B8D3B]\n\t(No symbol) [0x00600E12]\n\t(No symbol) [0x005DD2E4]\n\t(No symbol) [0x005FE61B]\n\t(No symbol) [0x005DD096]\n\t(No symbol) [0x005AC840]\n\t(No symbol) [0x005AD6A4]\n\tGetHandleVerifier [0x009D4523+2701795]\n\tGetHandleVerifier [0x009CFCA6+2683238]\n\tGetHandleVerifier [0x009EA9EE+2793134]\n\tGetHandleVerifier [0x007668C5+155013]\n\tGetHandleVerifier [0x0076CFAD+181357]\n\tGetHandleVerifier [0x00757458+92440]\n\tGetHandleVerifier [0x00757600+92864]\n\tGetHandleVerifier [0x00741FF0+5296]\n\tBaseThreadInitThunk [0x757BFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x779782AE+286]\n\tRtlGetAppContainerNamedObjectPath [0x7797827E+238]","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"57a9955ccb74c9e69f0f9d828d8e2b7b\")>\n\n    @allure.feature(\"Contact Us\")\n    @allure.severity(allure.severity_level.MINOR)\n    @allure.title(\"Submit Contact Us Form\")\n    @allure.description(\"Verify user can submit contact form and success message is displayed.\")\n    def test_006_contact_us_form(browser):\n        # Initialize page objects\n        home_page = HomePage(browser)\n        contact_us_page = ContactUsPage(browser)\n    \n        #Initialize TestData\n        messeges = load_test_data(\"contact_us.json\")\n        required_testdata = messeges[\"contact_form\"]\n    \n        # Step 1: Verify home page is displayed by checking if 'Home' link is active\n        assert home_page.is_home_page_displayed(), \"Home page is not visible or 'Home' link is not active\"\n    \n        # Step 2: Click on 'Contact Us' button\n        home_page.click_contact_us()\n    \n        # Step 3: Verify 'GET IN TOUCH' header is visible on the Contact Us page\n        assert contact_us_page.is_get_in_touch_header_visible(), \"'GET IN TOUCH' header is not visible\"\n    \n        # Step 4: Enter name, email, subject, and message\n        name = required_testdata[\"name\"]\n        email = required_testdata[\"email\"]\n        subject = required_testdata[\"subject\"]\n        message = required_testdata[\"message\"]\n        contact_us_page.fill_contact_form(name, email, subject, message)\n    \n        # Step 5: Upload file\n        file_path = get_resource_file_path(\"contact_us_upload_01.png\")\n        # Provide the correct path to the file\n        contact_us_page.upload_file(file_path)\n    \n        # Step 6: Click 'Submit' button\n        contact_us_page.click_submit_button()\n    \n        # Step 7: Click 'OK' button on success pop-up\n>       contact_us_page.click_ok_button()\n\ntestCases\\test_006_contact_us_form.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\contact_page.py:41: in click_ok_button\n    self.click(self.OK_BUTTON)\npageObjects\\base_page.py:43: in click\n    element = self.wait.until(EC.element_to_be_clickable(target))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"57a9955ccb74c9e69f0f9d828d8e2b7b\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002108436BE20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0074FC03+61635]\nE       \tGetHandleVerifier [0x0074FC44+61700]\nE       \t(No symbol) [0x005705D3]\nE       \t(No symbol) [0x005B899E]\nE       \t(No symbol) [0x005B8D3B]\nE       \t(No symbol) [0x00600E12]\nE       \t(No symbol) [0x005DD2E4]\nE       \t(No symbol) [0x005FE61B]\nE       \t(No symbol) [0x005DD096]\nE       \t(No symbol) [0x005AC840]\nE       \t(No symbol) [0x005AD6A4]\nE       \tGetHandleVerifier [0x009D4523+2701795]\nE       \tGetHandleVerifier [0x009CFCA6+2683238]\nE       \tGetHandleVerifier [0x009EA9EE+2793134]\nE       \tGetHandleVerifier [0x007668C5+155013]\nE       \tGetHandleVerifier [0x0076CFAD+181357]\nE       \tGetHandleVerifier [0x00757458+92440]\nE       \tGetHandleVerifier [0x00757600+92864]\nE       \tGetHandleVerifier [0x00741FF0+5296]\nE       \tBaseThreadInitThunk [0x757BFCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x779782AE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7797827E+238]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"config","time":{"start":1748625585498,"stop":1748625585499,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser","time":{"start":1748625585499,"stop":1748625594392,"duration":8893},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Verify user can submit contact form and success message is displayed.","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0074FC03+61635]\n\tGetHandleVerifier [0x0074FC44+61700]\n\t(No symbol) [0x005705D3]\n\t(No symbol) [0x005B899E]\n\t(No symbol) [0x005B8D3B]\n\t(No symbol) [0x00600E12]\n\t(No symbol) [0x005DD2E4]\n\t(No symbol) [0x005FE61B]\n\t(No symbol) [0x005DD096]\n\t(No symbol) [0x005AC840]\n\t(No symbol) [0x005AD6A4]\n\tGetHandleVerifier [0x009D4523+2701795]\n\tGetHandleVerifier [0x009CFCA6+2683238]\n\tGetHandleVerifier [0x009EA9EE+2793134]\n\tGetHandleVerifier [0x007668C5+155013]\n\tGetHandleVerifier [0x0076CFAD+181357]\n\tGetHandleVerifier [0x00757458+92440]\n\tGetHandleVerifier [0x00757600+92864]\n\tGetHandleVerifier [0x00741FF0+5296]\n\tBaseThreadInitThunk [0x757BFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x779782AE+286]\n\tRtlGetAppContainerNamedObjectPath [0x7797827E+238]","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"57a9955ccb74c9e69f0f9d828d8e2b7b\")>\n\n    @allure.feature(\"Contact Us\")\n    @allure.severity(allure.severity_level.MINOR)\n    @allure.title(\"Submit Contact Us Form\")\n    @allure.description(\"Verify user can submit contact form and success message is displayed.\")\n    def test_006_contact_us_form(browser):\n        # Initialize page objects\n        home_page = HomePage(browser)\n        contact_us_page = ContactUsPage(browser)\n    \n        #Initialize TestData\n        messeges = load_test_data(\"contact_us.json\")\n        required_testdata = messeges[\"contact_form\"]\n    \n        # Step 1: Verify home page is displayed by checking if 'Home' link is active\n        assert home_page.is_home_page_displayed(), \"Home page is not visible or 'Home' link is not active\"\n    \n        # Step 2: Click on 'Contact Us' button\n        home_page.click_contact_us()\n    \n        # Step 3: Verify 'GET IN TOUCH' header is visible on the Contact Us page\n        assert contact_us_page.is_get_in_touch_header_visible(), \"'GET IN TOUCH' header is not visible\"\n    \n        # Step 4: Enter name, email, subject, and message\n        name = required_testdata[\"name\"]\n        email = required_testdata[\"email\"]\n        subject = required_testdata[\"subject\"]\n        message = required_testdata[\"message\"]\n        contact_us_page.fill_contact_form(name, email, subject, message)\n    \n        # Step 5: Upload file\n        file_path = get_resource_file_path(\"contact_us_upload_01.png\")\n        # Provide the correct path to the file\n        contact_us_page.upload_file(file_path)\n    \n        # Step 6: Click 'Submit' button\n        contact_us_page.click_submit_button()\n    \n        # Step 7: Click 'OK' button on success pop-up\n>       contact_us_page.click_ok_button()\n\ntestCases\\test_006_contact_us_form.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\contact_page.py:41: in click_ok_button\n    self.click(self.OK_BUTTON)\npageObjects\\base_page.py:43: in click\n    element = self.wait.until(EC.element_to_be_clickable(target))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"57a9955ccb74c9e69f0f9d828d8e2b7b\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002108436BE20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0074FC03+61635]\nE       \tGetHandleVerifier [0x0074FC44+61700]\nE       \t(No symbol) [0x005705D3]\nE       \t(No symbol) [0x005B899E]\nE       \t(No symbol) [0x005B8D3B]\nE       \t(No symbol) [0x00600E12]\nE       \t(No symbol) [0x005DD2E4]\nE       \t(No symbol) [0x005FE61B]\nE       \t(No symbol) [0x005DD096]\nE       \t(No symbol) [0x005AC840]\nE       \t(No symbol) [0x005AD6A4]\nE       \tGetHandleVerifier [0x009D4523+2701795]\nE       \tGetHandleVerifier [0x009CFCA6+2683238]\nE       \tGetHandleVerifier [0x009EA9EE+2793134]\nE       \tGetHandleVerifier [0x007668C5+155013]\nE       \tGetHandleVerifier [0x0076CFAD+181357]\nE       \tGetHandleVerifier [0x00757458+92440]\nE       \tGetHandleVerifier [0x00757600+92864]\nE       \tGetHandleVerifier [0x00741FF0+5296]\nE       \tBaseThreadInitThunk [0x757BFCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x779782AE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7797827E+238]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException","steps":[],"attachments":[{"uid":"4d8a21c2b7e35370","name":"screenshot_on_failure","source":"4d8a21c2b7e35370.png","type":"image/png","size":92677},{"uid":"40185b2862b60684","name":"log","source":"40185b2862b60684.txt","type":"text/plain","size":2083},{"uid":"83fcc667ac989b3","name":"stdout","source":"83fcc667ac989b3.txt","type":"text/plain","size":5},{"uid":"408a27567368e650","name":"stderr","source":"408a27567368e650.txt","type":"text/plain","size":3802}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"browser::0","time":{"start":1748625609844,"stop":1748625612928,"duration":3084},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"minor"},{"name":"feature","value":"Contact Us"},{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"test_006_contact_us_form"},{"name":"host","value":"DESKTOP-6JB123S"},{"name":"thread","value":"7724-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.test_006_contact_us_form"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"b46c4a4d399a2fbf.json","parameterValues":[]}