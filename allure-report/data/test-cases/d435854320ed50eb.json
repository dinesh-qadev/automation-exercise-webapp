{"uid":"d435854320ed50eb","name":"Place Order with Register During Checkout","fullName":"testCases.test_014_place_order_register_checkout#test_place_order_register_checkout","historyId":"76f9fe5f3176c02b174844ff62da88b4","time":{"start":1748454198917,"stop":1748454217659,"duration":18742},"description":"Verify user can register during checkout and place order successfully.","descriptionHtml":"<p>Verify user can register during checkout and place order successfully.</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x564ac95ac71a <unknown>\n#1 0x564ac904f0a0 <unknown>\n#2 0x564ac90a09b0 <unknown>\n#3 0x564ac90a0ba1 <unknown>\n#4 0x564ac90eeea4 <unknown>\n#5 0x564ac90c63cd <unknown>\n#6 0x564ac90ec2a0 <unknown>\n#7 0x564ac90c6173 <unknown>\n#8 0x564ac9092d4b <unknown>\n#9 0x564ac90939b1 <unknown>\n#10 0x564ac95718cb <unknown>\n#11 0x564ac95757ca <unknown>\n#12 0x564ac9559622 <unknown>\n#13 0x564ac9576354 <unknown>\n#14 0x564ac953e45f <unknown>\n#15 0x564ac959a4f8 <unknown>\n#16 0x564ac959a6d6 <unknown>\n#17 0x564ac95ab586 <unknown>\n#18 0x7f346ac9caa4 <unknown>\n#19 0x7f346ad29c3c <unknown>","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"59cec731c96916c2f7706cb10c3b0981\")>\n\n    @allure.feature(\"Place Order\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Place Order with Register During Checkout\")\n    @allure.description(\"Verify user can register during checkout and place order successfully.\")\n    def test_place_order_register_checkout(browser):\n        home = HomePage(browser)\n        product = ProductsPage(browser)\n        cart = CartPage(browser)\n        signuplogin = SignupLoginPage(browser)\n        account = AccountPage(browser)\n        checkout = CheckoutPage(browser)\n        payment = PaymentPage(browser)\n    \n        # Step 1–3: Verify home page\n        assert home.is_home_page_displayed()\n    \n        # Step 4–6: Add product and go to cart\n    \n        expected_product_name, expected_price = product.hover_and_add_to_cart_and_get_price(index=1)\n        product. click_view_cart()\n        assert cart.is_cart_page_visible(), \"Cart page URL is incorrect or not loaded\"\n    \n        # Step 7–8: Proceed to checkout then click Register/Login\n        cart.click_proceed_to_checkout()\n        cart.click_register_login_button()\n    \n        # Step 9–10: Fill signup, create account\n        random_email = generate_random_email()\n        # Load data from json fie\n        user_data = load_test_data(\"users.json\")\n        account_info = user_data[\"account_info\"]\n        address_info = user_data[\"address_info\"]\n        signuplogin.signup(\n            name=address_info[\"firstname\"]+address_info[\"lastname\"],\n            email=random_email)\n    \n        signuplogin.fill_account_info(\n            password=account_info[\"password\"],\n            day=account_info[\"day\"],\n            month=account_info[\"month\"],\n            year=account_info[\"year\"]\n        )\n        signuplogin.fill_address_info(\n            firstname=address_info[\"firstname\"],\n            lastname=address_info[\"lastname\"],\n            company=address_info[\"company\"],\n            address1=address_info[\"address1\"],\n            address2=address_info[\"address2\"],\n            country=address_info[\"country\"],\n            state=address_info[\"state\"],\n            city=address_info[\"city\"],\n            zipcode=address_info[\"zipcode\"],\n            mobile=address_info[\"mobile\"]\n        )\n    \n        signuplogin.click_create_account()\n        assert account.is_account_created_visible(), \"'ACCOUNT CREATED!' is not visible\"\n        account.click_continue()\n    \n        # Step 11–13: Logged in, go to cart and proceed to checkout\n        assert account.is_logged_in_as_visible(user_name=address_info[\"firstname\"]+address_info[\"lastname\"]), \"'Logged in as username' is not visible\"\n        home.click_cart_button()\n        cart.click_proceed_to_checkout()\n    \n        # Step 14: Verify address and review order\n        assert checkout.is_address_and_review_visible(), f\"Review section is not visible in checkout page\"\n    \n        #Verify address content and order details\n        expected_address = f\"{address_info['firstname']} {address_info['lastname']} {address_info['company']} {address_info['address1']} {address_info['address2']} {address_info['city']} {address_info['state']} {address_info['zipcode']} {address_info['country']} {address_info['mobile']}\"\n        actual_address = checkout.get_delivery_address_text()\n        assert compare_data(expected_address, actual_address), f\"Address mismatch: Expected - '{expected_address}', but got - '{actual_address}'\"\n    \n        checkout.verify_product_review_details(\n            expected_name=expected_product_name,\n            expected_price=expected_price,\n            expected_quantity=1\n        )\n    \n        # Step 15: Enter comment and click Place Order\n        checkout.enter_comment(\"Please deliver between 9AM and 5PM\")\n        checkout.click_place_order()\n    \n        # Step 16-18: Payment\n        payment_test_data = load_test_data(\"payment_test_data.json\")\n        card_details = payment_test_data[\"test_payment_data\"]\n        payment.fill_payment_form(card_details)\n        payment.click_pay_and_confirm()\n>       payment.verify_order_success_message()\n\ntestCases/test_014_place_order_register_checkout.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npageObjects/payment_page.py:28: in verify_order_success_message\n    success_message = self.get_element_text(self.ORDER_SUCCESS_MESSAGE).strip()\npageObjects/base_page.py:76: in get_element_text\n    element = self.wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"59cec731c96916c2f7706cb10c3b0981\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f47ec8ddf80>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x564ac95ac71a <unknown>\nE       #1 0x564ac904f0a0 <unknown>\nE       #2 0x564ac90a09b0 <unknown>\nE       #3 0x564ac90a0ba1 <unknown>\nE       #4 0x564ac90eeea4 <unknown>\nE       #5 0x564ac90c63cd <unknown>\nE       #6 0x564ac90ec2a0 <unknown>\nE       #7 0x564ac90c6173 <unknown>\nE       #8 0x564ac9092d4b <unknown>\nE       #9 0x564ac90939b1 <unknown>\nE       #10 0x564ac95718cb <unknown>\nE       #11 0x564ac95757ca <unknown>\nE       #12 0x564ac9559622 <unknown>\nE       #13 0x564ac9576354 <unknown>\nE       #14 0x564ac953e45f <unknown>\nE       #15 0x564ac959a4f8 <unknown>\nE       #16 0x564ac959a6d6 <unknown>\nE       #17 0x564ac95ab586 <unknown>\nE       #18 0x7f346ac9caa4 <unknown>\nE       #19 0x7f346ad29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"config","time":{"start":1748454140961,"stop":1748454140961,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser","time":{"start":1748454196757,"stop":1748454198917,"duration":2160},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Verify user can register during checkout and place order successfully.","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x564ac95ac71a <unknown>\n#1 0x564ac904f0a0 <unknown>\n#2 0x564ac90a09b0 <unknown>\n#3 0x564ac90a0ba1 <unknown>\n#4 0x564ac90eeea4 <unknown>\n#5 0x564ac90c63cd <unknown>\n#6 0x564ac90ec2a0 <unknown>\n#7 0x564ac90c6173 <unknown>\n#8 0x564ac9092d4b <unknown>\n#9 0x564ac90939b1 <unknown>\n#10 0x564ac95718cb <unknown>\n#11 0x564ac95757ca <unknown>\n#12 0x564ac9559622 <unknown>\n#13 0x564ac9576354 <unknown>\n#14 0x564ac953e45f <unknown>\n#15 0x564ac959a4f8 <unknown>\n#16 0x564ac959a6d6 <unknown>\n#17 0x564ac95ab586 <unknown>\n#18 0x7f346ac9caa4 <unknown>\n#19 0x7f346ad29c3c <unknown>","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"59cec731c96916c2f7706cb10c3b0981\")>\n\n    @allure.feature(\"Place Order\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Place Order with Register During Checkout\")\n    @allure.description(\"Verify user can register during checkout and place order successfully.\")\n    def test_place_order_register_checkout(browser):\n        home = HomePage(browser)\n        product = ProductsPage(browser)\n        cart = CartPage(browser)\n        signuplogin = SignupLoginPage(browser)\n        account = AccountPage(browser)\n        checkout = CheckoutPage(browser)\n        payment = PaymentPage(browser)\n    \n        # Step 1–3: Verify home page\n        assert home.is_home_page_displayed()\n    \n        # Step 4–6: Add product and go to cart\n    \n        expected_product_name, expected_price = product.hover_and_add_to_cart_and_get_price(index=1)\n        product. click_view_cart()\n        assert cart.is_cart_page_visible(), \"Cart page URL is incorrect or not loaded\"\n    \n        # Step 7–8: Proceed to checkout then click Register/Login\n        cart.click_proceed_to_checkout()\n        cart.click_register_login_button()\n    \n        # Step 9–10: Fill signup, create account\n        random_email = generate_random_email()\n        # Load data from json fie\n        user_data = load_test_data(\"users.json\")\n        account_info = user_data[\"account_info\"]\n        address_info = user_data[\"address_info\"]\n        signuplogin.signup(\n            name=address_info[\"firstname\"]+address_info[\"lastname\"],\n            email=random_email)\n    \n        signuplogin.fill_account_info(\n            password=account_info[\"password\"],\n            day=account_info[\"day\"],\n            month=account_info[\"month\"],\n            year=account_info[\"year\"]\n        )\n        signuplogin.fill_address_info(\n            firstname=address_info[\"firstname\"],\n            lastname=address_info[\"lastname\"],\n            company=address_info[\"company\"],\n            address1=address_info[\"address1\"],\n            address2=address_info[\"address2\"],\n            country=address_info[\"country\"],\n            state=address_info[\"state\"],\n            city=address_info[\"city\"],\n            zipcode=address_info[\"zipcode\"],\n            mobile=address_info[\"mobile\"]\n        )\n    \n        signuplogin.click_create_account()\n        assert account.is_account_created_visible(), \"'ACCOUNT CREATED!' is not visible\"\n        account.click_continue()\n    \n        # Step 11–13: Logged in, go to cart and proceed to checkout\n        assert account.is_logged_in_as_visible(user_name=address_info[\"firstname\"]+address_info[\"lastname\"]), \"'Logged in as username' is not visible\"\n        home.click_cart_button()\n        cart.click_proceed_to_checkout()\n    \n        # Step 14: Verify address and review order\n        assert checkout.is_address_and_review_visible(), f\"Review section is not visible in checkout page\"\n    \n        #Verify address content and order details\n        expected_address = f\"{address_info['firstname']} {address_info['lastname']} {address_info['company']} {address_info['address1']} {address_info['address2']} {address_info['city']} {address_info['state']} {address_info['zipcode']} {address_info['country']} {address_info['mobile']}\"\n        actual_address = checkout.get_delivery_address_text()\n        assert compare_data(expected_address, actual_address), f\"Address mismatch: Expected - '{expected_address}', but got - '{actual_address}'\"\n    \n        checkout.verify_product_review_details(\n            expected_name=expected_product_name,\n            expected_price=expected_price,\n            expected_quantity=1\n        )\n    \n        # Step 15: Enter comment and click Place Order\n        checkout.enter_comment(\"Please deliver between 9AM and 5PM\")\n        checkout.click_place_order()\n    \n        # Step 16-18: Payment\n        payment_test_data = load_test_data(\"payment_test_data.json\")\n        card_details = payment_test_data[\"test_payment_data\"]\n        payment.fill_payment_form(card_details)\n        payment.click_pay_and_confirm()\n>       payment.verify_order_success_message()\n\ntestCases/test_014_place_order_register_checkout.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npageObjects/payment_page.py:28: in verify_order_success_message\n    success_message = self.get_element_text(self.ORDER_SUCCESS_MESSAGE).strip()\npageObjects/base_page.py:76: in get_element_text\n    element = self.wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"59cec731c96916c2f7706cb10c3b0981\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f47ec8ddf80>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x564ac95ac71a <unknown>\nE       #1 0x564ac904f0a0 <unknown>\nE       #2 0x564ac90a09b0 <unknown>\nE       #3 0x564ac90a0ba1 <unknown>\nE       #4 0x564ac90eeea4 <unknown>\nE       #5 0x564ac90c63cd <unknown>\nE       #6 0x564ac90ec2a0 <unknown>\nE       #7 0x564ac90c6173 <unknown>\nE       #8 0x564ac9092d4b <unknown>\nE       #9 0x564ac90939b1 <unknown>\nE       #10 0x564ac95718cb <unknown>\nE       #11 0x564ac95757ca <unknown>\nE       #12 0x564ac9559622 <unknown>\nE       #13 0x564ac9576354 <unknown>\nE       #14 0x564ac953e45f <unknown>\nE       #15 0x564ac959a4f8 <unknown>\nE       #16 0x564ac959a6d6 <unknown>\nE       #17 0x564ac95ab586 <unknown>\nE       #18 0x7f346ac9caa4 <unknown>\nE       #19 0x7f346ad29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","steps":[],"attachments":[{"uid":"96bbfd6b1d707113","name":"screenshot_on_failure","source":"96bbfd6b1d707113.png","type":"image/png","size":157329},{"uid":"cd1b69063b72f916","name":"log","source":"cd1b69063b72f916.txt","type":"text/plain","size":5354},{"uid":"8fb6b31f57062b9a","name":"stdout","source":"8fb6b31f57062b9a.txt","type":"text/plain","size":224},{"uid":"a7efda51e9e50de6","name":"stderr","source":"a7efda51e9e50de6.txt","type":"text/plain","size":9938}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"browser::0","time":{"start":1748454218042,"stop":1748454218222,"duration":180},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Place Order"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"test_014_place_order_register_checkout"},{"name":"host","value":"fv-az1326-784"},{"name":"thread","value":"3669-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.test_014_place_order_register_checkout"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"e00f3d4c73668237","status":"passed","time":{"start":1748370053557,"stop":1748370072634,"duration":19077}},{"uid":"1e1c3e5669abdadd","status":"passed","time":{"start":1748366393696,"stop":1748366416093,"duration":22397}}],"categories":[{"name":"Test Defects","messageRegex":".*(NoSuchElementException|TimeoutException).*","matchedStatuses":["broken"]}],"tags":[]},"source":"d435854320ed50eb.json","parameterValues":[]}