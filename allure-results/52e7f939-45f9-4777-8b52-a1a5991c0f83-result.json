{"name": "Register User", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'is_displayed'", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e925d485fad6afd611f938e4767f73cc\")>\n\n    @allure.feature(\"User Authentication\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.title(\"Register User\")\n    @allure.description(\"Verify new user can register with valid details and account is created.\")\n    def test_register_user(browser):\n        home_page = HomePage(browser)\n        signup_login_page = SignupLoginPage(browser)\n        account_page = AccountPage(browser)\n    \n        # Load data from json fie\n        user_data = load_test_data(\"users.json\")\n        account_info = user_data[\"account_info\"]\n        address_info = user_data[\"address_info\"]\n    \n        # Step 3\n        assert home_page.is_logo_displayed(), \"Home page is not visible\"\n    \n        # Step 4\n        home_page.click_signup_login()\n    \n        # Step 5\n        assert signup_login_page.is_new_user_signup_visible(), \"'New User Signup!' is not visible\"\n    \n        # Step 6-7\n        #random_email = f\"user{random.randint(1000,9999)}@test.com\"\n        random_email = generate_random_email()\n        signup_login_page.signup(\n            name=address_info[\"firstname\"]+address_info[\"lastname\"],\n            email=random_email\n        )\n    \n        # Step 8\n>       assert signup_login_page.is_enter_account_info_visible(), \"'ENTER ACCOUNT INFORMATION' is not visible\"\n\ntestCases\\test_001_register_user.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\signup_login_page.py:55: in is_enter_account_info_visible\n    return self.is_visible(self.ENTER_ACCOUNT_INFO)\npageObjects\\base_page.py:64: in is_visible\n    element = self.wait.until(EC.visibility_of_element_located(locator))\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:137: in until\n    value = method(self._driver)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:224: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nelement = None, visibility = True\n\n    def _element_if_visible(element: WebElement, visibility: bool = True) -> Union[Literal[False], WebElement]:\n        \"\"\"An expectation for checking that an element, known to be present on the\n        DOM of a page, is of the expected visibility.\n    \n        Parameters:\n        -----------\n        element : WebElement\n            The WebElement to check.\n        visibility : bool\n            The expected visibility of the element.\n    \n        Returns:\n        -------\n        WebElement : The WebElement once it is visible or not visible.\n        \"\"\"\n>       return element if element.is_displayed() == visibility else False\nE       AttributeError: 'NoneType' object has no attribute 'is_displayed'\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:280: AttributeError"}, "description": "Verify new user can register with valid details and account is created.", "start": 1748282331354, "stop": 1748282333236, "uuid": "62bbb01e-581c-4721-b790-d53482138332", "testCaseId": "4600bb7d7d7d2ed0c78ca57901abb55f", "fullName": "testCases.test_001_register_user#test_register_user"}