name: Run Selenium Tests and Publish Allure Report

on:
  workflow_dispatch:       # Manual trigger
  schedule:
    - cron: "0 2 * * *"   # Daily at 2 AM UTC

jobs:
  test:
    runs-on: ubuntu-latest  # Uses the latest Ubuntu runner provided by GitHub

    strategy:
      matrix:
        python-version: [3.11.4]  ## Runs tests using Python 3.11.4 (can be extended for multiple versions)

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Checks out  repository code into the runner, so it's accessible to the job

    - name: Set up Python
      uses: actions/setup-python@v4  # Sets up the specified Python version in the runner
      with:
        python-version: ${{ matrix.python-version }}  # Uses the version defined in the matrix above

    - name: Install dependencies  # Upgrades pip to the latest version and Installs all dependencies from the requirements file
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Allure CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk wget unzip
        wget https://github.com/allure-framework/allure2/releases/latest/download/allure-2.27.0.tgz
        tar -zxvf allure-2.27.0.tgz
        sudo mv allure-2.27.0 /opt/allure
        sudo ln -s /opt/allure/bin/allure /usr/bin/allure
        allure --version

    - name: Run Pytest with Allure (Headless Chrome)
      env:
        CI: true   # Sets an environment variable used in many test setups to indicate CI environment
      run: |
        pytest --env=production

    - name: Generate Allure Report
      if: always()  # Ensures this step runs even if previous one failed
      run: |
        allure generate allure-results --clean -o allure-report

    - name: Deploy Allure Report to GitHub Pages
      if: always()   # Ensures this also runs even if tests failed
      uses: peaceiris/actions-gh-pages@v3  # Deploys static site to gh-pages branch
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}  # GitHub token for pushing to gh-pages
        publish_dir: ./allure-report   # The directory to publish (Allure report output)
        destination_dir: allure-report  # Optional: sub-directory under gh-pages to store report
        publish_branch: gh-pages   # Target branch for GitHub Pages

